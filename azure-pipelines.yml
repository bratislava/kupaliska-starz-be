# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  tag: '$(Build.SourceVersion)'
  dockerRepository: bratislava/kupaliska-starz-be/kupaliska-starz-be
  npm_config_cache: $(Pipeline.Workspace)/.npm
  underscoreName: kupaliska_starz_be

resources:
 containers:
  - container: postgres
    image: postgres:13-alpine
    ports:
    - 5432:5432
    env:
      POSTGRES_USER: "kupaliskabratislava_test"
      POSTGRES_PASSWORD: "kupaliskabratislava_test"
      POSTGRES_DB: "kupaliskabratislava_test"

stages:
- stage: Test
  jobs:
  - job: Test
    variables:
      NODE_ENV: TEST
      HOST: 0.0.0.0
      PORT: 8000
      CORS_ORIGINS: '["localhost", "127.0.0.1"]'
      JWT_SECRET: "secret"
      TZ: Europe/Bratislava
      FILES_PATH: test-files
      LOGS_PATH: logs
      MAILGUN_API_KEY: testtest
      MAILGUN_DOMAIN: sandboxa111111111.mailgun.org
      MAILGUN_EMAIL_FROM: "Mesto Bratislava <kupaliska.test@bratislava.sk>"
      MAILGUN_TEMPLATE_RESET_PASSWORD: temp_kupaliska_reset_pass
      MAILGUN_TEMPLATE_ORDER: temp_kupaliska_order
      MAILGUN_TEMPLATE_SET_PASSWORD: set-password
      POSTGRES_USER: kupaliskabratislava_test
      POSTGRES_DB: kupaliskabratislava_test
      POSTGRES_PASSWORD: kupaliskabratislava_test
      POSTGRES_HOST: localhost:5432
      MAX_TICKET_PURCHASE_LIMIT: 10
      COMMISSION_COEFFICIENT: 0.015
      GP_WEBPAY_HTTP_API_URL: https://test.3dsecure.gpwebpay.com/pgw/order.do
      GP_WEBPAY_CURRENCY: 978
      GP_WEBPAY_KEYS_PATH: resources/test-keys
      GP_WEBPAY_CLIENT_APP_URL: http://localhost:8000
      GP_WEBPAY_PROVIDER: 0902
    services:
      postgres: postgres
    steps:
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(npm_config_cache)
      displayName: Cache npm
    - task: Npm@1
      displayName: NPM Install
      inputs:
        command: 'ci'
    - task: Npm@1
      displayName: NPM Run Test
      inputs:
        command: 'custom'
        customCommand: 'run test:coverage'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/junit.xml'
    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura # or JaCoCo
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- stage: Build
  displayName: Build image
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and push Prod Image
      inputs:
        containerRegistry: 'ghcr'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: 'docker/Dockerfile.prod'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'

- stage: Dev
  dependsOn:
    - Build
  variables:
    FE_HOSTNAME: kupaliska.dev.bratislava.sk
    ADMIN_HOSTNAME: login.kupaliska.dev.bratislava.sk
  jobs:
    - template: ./kubernetes/release-template.yml
      parameters:
        environment: 'Dev.bratislava-monorepo'
        hostname: api.kupaliska.dev.bratislava.sk

- stage: Staging
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn:
    - Dev
  variables:
    FE_HOSTNAME: kupaliska.staging.bratislava.sk
    ADMIN_HOSTNAME: login.kupaliska.staging.bratislava.sk
  jobs:
    - template: ./kubernetes/release-template.yml
      parameters:
        environment: 'Staging.bratislava-monorepo'
        hostname: api.kupaliska.staging.bratislava.sk

- stage: Production
  dependsOn:
    - Staging
  variables:
    FE_HOSTNAME: kupaliska.bratislava.sk
    ADMIN_HOSTNAME: login.kupaliska.bratislava.sk
  jobs:
    - template: ./kubernetes/release-template.yml
      parameters:
        environment: 'Prod.bratislava-monorepo'
        hostname: api.kupaliska.bratislava.sk