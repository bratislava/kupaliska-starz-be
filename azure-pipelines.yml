# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

variables:
  tag: '$(Build.SourceVersion)'
  dockerRepository: bratislava/kupaliska-starz-be/kupaliska-starz-be
  npm_config_cache: $(Pipeline.Workspace)/.npm
  underscoreName: kupaliska_starz_be

resources:
 containers:
  - container: postgres
    image: postgres:13-alpine
    ports:
    - 5432:5432
    env:
      POSTGRES_USER: "kupaliskabratislava_test"
      POSTGRES_PASSWORD: "kupaliskabratislava_test"
      POSTGRES_DB: "kupaliskabratislava_test"

stages:
- stage: Test
  jobs:
  - job: Test
    variables:
      NODE_ENV: TEST
      HOST: 0.0.0.0
      PORT: 8000
      CORS_ORIGINS: '["localhost", "127.0.0.1"]'
      JWT_SECRET: "secret"
      TZ: Europe/Bratislava
      FILES_PATH: test-files
      LOGS_PATH: logs
      MAILGUN_API_KEY: testtest
      MAILGUN_DOMAIN: sandboxa111111111.mailgun.org
      MAILGUN_EMAIL_FROM: "Mesto Bratislava <kupaliska.test@bratislava.sk>"
      MAILGUN_TEMPLATE_RESET_PASSWORD: temp_kupaliska_reset_pass
      MAILGUN_TEMPLATE_ORDER: temp_kupaliska_order
      MAILGUN_TEMPLATE_SET_PASSWORD: set-password
      POSTGRES_USER: kupaliskabratislava_test
      POSTGRES_DB: kupaliskabratislava_test
      POSTGRES_PASSWORD: kupaliskabratislava_test
      POSTGRES_HOST: localhost:5432
      MAX_TICKET_PURCHASE_LIMIT: 10
      COMMISSION_COEFFICIENT: 0.015
      GP_WEBPAY_HTTP_API_URL: https://test.3dsecure.gpwebpay.com/pgw/order.do
      GP_WEBPAY_CURRENCY: 978
      GP_WEBPAY_KEYS_PATH: resources/test-keys
      GP_WEBPAY_CLIENT_APP_URL: http://localhost:8000
      GP_WEBPAY_PROVIDER: 0902
    pool:
      vmImage: 'ubuntu-latest'
    services:
      postgres: postgres
    steps:
    - task: DownloadSecureFile@1
      name: PrivateKey
      inputs:
        secureFile: kupaliska_starz_be_stage.merchant-pvk.key
      displayName: Download Private Key
    - task: DownloadSecureFile@1
      name: PublicKey
      inputs:
        secureFile: kupaliska_starz_be_stage.gpe.signing.pem
      displayName: Download Public Key
    - script: |
        mkdir -p $(Build.SourcesDirectory)/$GP_WEBPAY_KEYS_PATH
        mv $(PublicKey.secureFilePath) $(Build.SourcesDirectory)/$GP_WEBPAY_KEYS_PATH/gpe.signing.pem
        mv $(PrivateKey.secureFilePath) $(Build.SourcesDirectory)/$GP_WEBPAY_KEYS_PATH/merchant-pvk.key
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(npm_config_cache)
      displayName: Cache npm
    - task: Npm@1
      displayName: NPM Install
      inputs:
        command: 'ci'
    - task: Npm@1
      displayName: NPM Run Test
      inputs:
        command: 'custom'
        customCommand: 'run test:coverage'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/junit.xml'
    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura # or JaCoCo
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- stage: Build
  displayName: Build image
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadSecureFile@1
      name: PrivateKeyProd
      inputs:
        secureFile: kupaliska_starz_be.merchant-pvk.key
      displayName: Download Production Private Key
    - task: DownloadSecureFile@1
      name: PublicKeyProd
      inputs:
        secureFile: kupaliska_starz_be.gpe.signing.pem
      displayName: Download Production Public Key
    - task: DownloadSecureFile@1
      name: PrivateKeyTest
      inputs:
        secureFile: kupaliska_starz_be_stage.merchant-pvk.key
      displayName: Download Test Private Key
    - task: DownloadSecureFile@1
      name: PublicKeyTest
      inputs:
        secureFile: kupaliska_starz_be_stage.gpe.signing.pem
      displayName: Download Test Public Key
    - script: |
        mkdir -p $(Build.SourcesDirectory)/resources/test-keys
        mkdir -p $(Build.SourcesDirectory)/resources/keys
        mv $(PublicKeyTest.secureFilePath)  $(Build.SourcesDirectory)/resources/test-keys/gpe.signing.pem
        mv $(PrivateKeyTest.secureFilePath) $(Build.SourcesDirectory)/resources/test-keys/merchant-pvk.key
        mv $(PublicKeyProd.secureFilePath)  $(Build.SourcesDirectory)/resources/keys/gpe.signing.pem
        mv $(PrivateKeyProd.secureFilePath) $(Build.SourcesDirectory)/resources/keys/merchant-pvk.key
      displayName: Move Keys To required locations
    - task: Docker@2
      displayName: Build and push Dev Image
      inputs:
        containerRegistry: 'Github Packages'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: 'docker/Dockerfile.dev'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)-dev'
    - task: Docker@2
      displayName: Build and push Prod Image
      inputs:
        containerRegistry: 'Github Packages'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: 'docker/Dockerfile.prod'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)-prod'
    
- stage: Staging
  variables:
  - group: Kupaliska-Common-Stage
  - group: Kupaliska-GPWebPay-Stage
  - group: Kupaliska-Mailgun
  - group: Kupaliska-Postgres-Stage
  - group: Kupaliska-Sentry-Stage
  jobs:
  - deployment: Staging
    environment:
      name: Staging
      resourceType: VirtualMachine
      tags: docker
    variables:
      DEPLOY_PATH: "~/deployments/kupaliska/stage"
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-template.yml
            parameters:
              ProjectNameSuffix: _stage
              ImageTagSuffix: -dev

- stage: ProductionStaging
  variables:
  - group: Kupaliska-Common-Prod
  - group: Kupaliska-GPWebPay-Prod
  - group: Kupaliska-Mailgun
  - group: Kupaliska-Postgres-Prod
  - group: Kupaliska-Sentry-Prod
  jobs:
  - deployment: Production
    environment:
      name: Production
      resourceType: VirtualMachine
      tags: docker
    variables:
      DEPLOY_PATH: "/home/gitlab-runner/deployments/kupaliska/stage"
      APP_OUT_HOST: 18000
      HOST: https://kupaliska-api-staging.bratislava.sk
      CORS_ORIGINS: '["https://kupaliska-staging.bratislava.sk", "https://kupaliska-admin-staging.bratislava.sk"]'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-template.yml
            parameters:
              ImageTagSuffix: -prod
              ProjectNameSuffix: _stage



- stage: Production
  variables:
  - group: Kupaliska-Common-Prod
  - group: Kupaliska-GPWebPay-Prod
  - group: Kupaliska-Mailgun
  - group: Kupaliska-Postgres-Prod
  - group: Kupaliska-Sentry-Prod
  jobs:
  - deployment: Production
    environment:
      name: Production
      resourceType: VirtualMachine
      tags: docker
    variables:
      DEPLOY_PATH: "/home/gitlab-runner/deployments/kupaliska/prod"
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-template.yml
            parameters:
              ImageTagSuffix: -prod
