/**
    @api {get} admin/tickets/swimmingPools/:swimmingPoolId Get tickets
    @apiVersion 1.0.0
    @apiName GetTickets
    @apiGroup AdminTicket
    @apiPermission SuperAdmin, Operator, SwimmingPoolOperator

    @apiDescription Endpoint for getting list of tickets for swimming pool

    @apiParam (Query) {Number} [limit=20] Limit
    @apiParam (Query) {Number} [page=1] Page
    @apiParam (Query) {Object} [filters] Filters

    @apiParam (Query) {Object} [filters.zip] Filter by customer zip.
    @apiParam (Query) {String} filters.zip.value Email.
    @apiParam (Query) {String="like","exact"} [filters.zip.type="like"] Filter type.

    @apiParam (Query) {Object} [filters.ticketTypes] Filter by ticket types.
    @apiParam (Query) {String[]} filters.ticketTypes.value Array of ticket type ids.
    @apiParam (Query) {String="in"} [filters.ticketTypes.type="in"] Filter type.

    @apiParam (Query) {Object} [filters.price] Filter by price
    @apiParam (Query) {String} [filters.price.from] From price
    @apiParam (Query) {String} [filters.price.to] To price
    @apiParam (Query) {String="range"} [filters.price.type="range"] Filter type

    @apiParam (Query) {Object} [filters.age] Filter by age
    @apiParam (Query) {String} [filters.age.from] From age
    @apiParam (Query) {String} [filters.age.to] To age
    @apiParam (Query) {Boolean} [filters.age.showUnspecified=false] Show also records with unspecified age?
    @apiParam (Query) {String="range"} [filters.age.type="range"] Filter type

    @apiParam (Query) {Object} [filters.numberOfVisits] Filter by number of visits
    @apiParam (Query) {String} [filters.numberOfVisits.from] From number of visits
    @apiParam (Query) {String} [filters.numberOfVisits.to] To number of visits
    @apiParam (Query) {String="range"} [filters.numberOfVisits.type="range"] Filter type

    @apiParam (Query) {Object} [filters.createdAt] Filter by created at.
    @apiParam (Query) {String} [filters.createdAt.from] Created at from date.
    @apiParam (Query) {String} [filters.createdAt.to] Created at to date.
    @apiParam (Query) {String="range"} [filters.createdAt.type="range"] Filter type.

    @apiParam (Query) {String="price","numberOfVisits","age","zip","ticketTypeName","createdAt"} [order="createdAt"] Order
    @apiParam (Query) {String} [direction="desc"] Order direction
    @apiParamExample {json} Request-Query-Example:
    {
        "limit": 20,
        "page": 1,
        "filter": {
            "zip": {
                "value": "033",
                "type": "like"
            },
            "price": {
                "to": 10.33,
                "type": "range"
            },
            "age": {
                "from": 30,
                "type": "range",
                "showUnspecified": true
            },
            "numberOfVisits": {
                "to": 10,
                "type": "range"
            },
            "ticketTypes": {
                "value": ["c70954c7-970d-4f1a-acf4-12b91acabe01"],
                "type": "in"
            },
            "createdAt": {
                "to": "2021-05-12T10:36:19.021Z",
                "type": "range"
            }
        },
        "order": "createdAt",
        "direction": "asc"
    }

    @apiSuccess (Response) {Object[]} tickets Array of tickets
    @apiSuccess (Response) {String} tickets.id Ticket id (UUID4)
    @apiSuccess (Response) {Number} tickets.price Ticket price
    @apiSuccess (Response) {Number} tickets.age User`s age
    @apiSuccess (Response) {Number} tickets.zip User`s zip code
    @apiSuccess (Response) {Number} tickets.numberOfVisits Number of user`s visits.
    @apiSuccess (Response) {String} tickets.ticketTypeName Ticket name
    @apiSuccess (Response) {String} tickets.createdAt Created at (ISO String)
    @apiSuccess (Response) {Object} pagination Pagination object
    @apiSuccess (Response) {Number} pagination.limit Limit
    @apiSuccess (Response) {Number} pagination.page Current page
    @apiSuccess (Response) {Number} pagination.totalPages Total pages
    @apiSuccess (Response) {Number} pagination.totalCount Total count

    @apiSuccessExample Success-Response-Example:
    HTTP/1.1 200 OK
    {
        "tickets": [{
            "id": "c70954c7-970d-4f1a-acf4-12b91acabe01",
            "price": 99.99,
            "age": 15,
            "isChildren": true,
            "numberOfVisits": 13,
            "zip": "03333",
            "ticketTypeName": "Sez√≥nna permanentka",
            "createdAt": "2020-10-08T06:53:47.477Z"
        }],
        "pagination": {
            "limit": 50,
            "page": 2,
            "totalPages": 3,
            "totalCount": 6
        }
    }

    @apiUse ErrorResponse
    @apiUse AuthorizationHeader

*/
