/**
    @api {get} admin/orders Get orders list
    @apiVersion 1.0.0
    @apiName GetOrder
    @apiGroup AdminOrders
    @apiPermission SuperAdmin, Operator

    @apiDescription Endpoint for getting list of orders

    @apiParam (Query) {Number} [limit=20] Limit
    @apiParam (Query) {Number} [page=1] Page
    @apiParam (Query) {Boolean} [export=false] Download data as csv?
    @apiParam (Query) {Object} [filters] Filters
    @apiParam (Query) {Object} [filters.state] Filter by order state.
    @apiParam (Query) {String[]} filters.state.value Array of states.
    @apiParam (Query) {String="in"} [filters.state.type="in"] Filter type.
    @apiParam (Query) {Object} [filters.email] Filter by customer email.
    @apiParam (Query) {String} filters.email.value Email.
    @apiParam (Query) {String="like"} [filters.email.type="like"] Filter type.
    @apiParam (Query) {Object} [filters.swimmingPools] Filter by swimming pools.
    @apiParam (Query) {String[]} filters.swimmingPools.value Array of swimming pool ids.
    @apiParam (Query) {String="in"} [filters.swimmingPools.type="in"] Filter type.
    @apiParam (Query) {Object} [filters.ticketTypes] Filter by ticket types.
    @apiParam (Query) {String[]} filters.ticketTypes.value Array of ticket type ids.
    @apiParam (Query) {String="in"} [filters.ticketTypes.type="in"] Filter type.
    @apiParam (Query) {Object} [filters.createdAt] Filter by created at.
    @apiParam (Query) {String} [filters.createdAt.from] Created at from date.
    @apiParam (Query) {String} [filters.createdAt.to] Created at to date.
    @apiParam (Query) {String="range"} [filters.createdAt.type="range"] Filter type.
    @apiParam (Query) {String="orderNumber","price","state","discount","createdAt","updatedAt"} [order] Order
    @apiParam (Query) {String} [direction] Order direction
    @apiParamExample {json} Request-Query-Example:
    {
        "limit": 20,
        "page": 1,
        "export": false,
        "filter": {
            "state": {
                "value": ["CREATED", "FAILED"],
                "type": "in"
            },
            "email": {
                "value": "email@example",
                "type": "like"
            },
            "swimmingPools": {
                "value": ["c70954c7-970d-4f1a-acf4-12b91acabe01"],
                "type": "in"
            },
            "ticketTypes": {
                "value": ["c70954c7-970d-4f1a-acf4-12b91acabe01"],
                "type": "in"
            },
            "createdAt": {
                "to": "2021-05-12T10:36:19.021Z",
                "type": "range"
            },
        },
        "order": "orderNumber",
        "direction": "asc"
    }

    @apiSuccess (Response) {Object[]} orders Array of orders
    @apiSuccess (Response) {String} orders.id Order id (UUID4)
    @apiSuccess (Response) {Number} orders.price Order final price
    @apiSuccess (Response) {Number} orders.discount Order discount
    @apiSuccess (Response) {String="CREATED","PAID","FAILED","CANCELED"} orders.state Order state
    @apiSuccess (Response) {Number} orders.orderNumber Order number
    @apiSuccess (Response) {Number} orders.numberOfTickets Number of tickets
    @apiSuccess (Response) {Number} orders.numberOfChildren Number of children
    @apiSuccess (Response) {String} orders.email Main order email
    @apiSuccess (Response) {String} orders.userName Adult`s name
    @apiSuccess (Response) {String} orders.ticketName Ticket name
    @apiSuccess (Response) {String} orders.updatedAt Updated at (ISO String)
    @apiSuccess (Response) {String} orders.createdAt Created at (ISO String)
    @apiSuccess (Response) {Object} pagination Pagination object
    @apiSuccess (Response) {Number} pagination.limit Limit
    @apiSuccess (Response) {Number} pagination.page Current page
    @apiSuccess (Response) {Number} pagination.totalPages Total pages
    @apiSuccess (Response) {Number} pagination.totalCount Total count

    @apiSuccessExample Success-Response-Example:
    HTTP/1.1 200 OK
    {
        "orders": [{
            "id": "c70954c7-970d-4f1a-acf4-12b91acabe01",
            "price": 99.99,
            "discount": 0,
            "state": "PAID",
            "orderNumber": 23,
            "numberOfTickets": 3,
            "numberOfChildren": 2,
            "email": "example@example.com",
            "userName": " Ondrej Labut",
            "ticketName": "Sez√≥nna permanentka",
            "createdAt": "2020-10-08T06:53:47.477Z",
            "updatedAt": "2020-10-08T06:53:47.477Z",
        }],
        "pagination": {
            "limit": 50,
            "page": 2,
            "totalPages": 3,
            "totalCount": 6
        }
    }

    @apiUse ErrorResponse
    @apiUse AuthorizationHeader

*/
